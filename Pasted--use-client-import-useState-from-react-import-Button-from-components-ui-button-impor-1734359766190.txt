'use client'

import { useState } from 'react'
import { Button } from "@/components/ui/button"
import Link from 'next/link'
import { ChevronLeft, ChevronRight, Calendar, MapPin, Clock } from 'lucide-react'
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"

export default function Events() {
  const allUpcomingEvents = [
    {
      id: 1,
      title: "Guest Speaker: John Doe",
      date: "May 15, 2023",
      time: "4:00 PM",
      location: "Jesuit Dallas Auditorium",
      description: "Join us for an insightful talk on commercial real estate trends with industry expert John Doe.",
    },
    {
      id: 2,
      title: "Real Estate Market Analysis Workshop",
      date: "June 1, 2023",
      time: "3:30 PM",
      location: "Room 201",
      description: "Learn how to analyze real estate markets and identify investment opportunities in this hands-on workshop.",
    },
    {
      id: 3,
      title: "Property Valuation Seminar",
      date: "June 15, 2023",
      time: "2:00 PM",
      location: "Conference Room A",
      description: "Learn the fundamentals of property valuation from experienced appraisers.",
    },
    {
      id: 4,
      title: "Real Estate Tech Innovation Showcase",
      date: "July 1, 2023",
      time: "1:00 PM",
      location: "Innovation Lab",
      description: "Explore cutting-edge technologies shaping the future of real estate.",
    },
    {
      id: 5,
      title: "Networking Event: Meet Dallas Real Estate Leaders",
      date: "July 15, 2023",
      time: "5:00 PM",
      location: "Grand Hall",
      description: "Connect with top real estate professionals in the Dallas area.",
    },
    {
      id: 6,
      title: "Sustainable Real Estate Development Panel",
      date: "August 1, 2023",
      time: "3:00 PM",
      location: "Lecture Hall B",
      description: "Industry experts discuss sustainable practices in real estate development.",
    },
  ]

  const allPastEvents = [
    {
      id: 7,
      title: "Downtown Dallas Property Tour",
      date: "April 15, 2023",
      time: "10:00 AM",
      location: "Downtown Dallas",
      description: "Members explored prime commercial properties in downtown Dallas with industry professionals.",
    },
    {
      id: 8,
      title: "Real Estate Investment Strategies Seminar",
      date: "March 30, 2023",
      time: "3:00 PM",
      location: "Seminar Room 101",
      description: "Expert panel discussion on various real estate investment strategies and market opportunities.",
    },
    {
      id: 9,
      title: "Networking Mixer with Industry Leaders",
      date: "March 1, 2023",
      time: "5:00 PM",
      location: "Student Center",
      description: "Students connected with Dallas's top real estate professionals in an informal networking session.",
    },
    {
      id: 10,
      title: "Real Estate Tech Innovation Showcase",
      date: "February 15, 2023",
      time: "2:00 PM",
      location: "Tech Hub",
      description: "Demonstration of cutting-edge technologies shaping the future of real estate.",
    },
    {
      id: 11,
      title: "Sustainable Development Symposium",
      date: "January 30, 2023",
      time: "1:00 PM",
      location: "Green Building Center",
      description: "Discussion on eco-friendly practices and sustainable development in real estate.",
    },
    {
      id: 12,
      title: "Real Estate Law Workshop",
      date: "January 15, 2023",
      time: "3:00 PM",
      location: "Law Library",
      description: "Legal experts provided insights on real estate laws and regulations.",
    },
  ]

  const [upcomingPage, setUpcomingPage] = useState(1)
  const [pastPage, setPastPage] = useState(1)
  const eventsPerPage = 3

  const indexOfLastUpcoming = upcomingPage * eventsPerPage
  const indexOfFirstUpcoming = indexOfLastUpcoming - eventsPerPage
  const currentUpcomingEvents = allUpcomingEvents.slice(indexOfFirstUpcoming, indexOfLastUpcoming)

  const indexOfLastPast = pastPage * eventsPerPage
  const indexOfFirstPast = indexOfLastPast - eventsPerPage
  const currentPastEvents = allPastEvents.slice(indexOfFirstPast, indexOfLastPast)

  const totalUpcomingPages = Math.ceil(allUpcomingEvents.length / eventsPerPage)
  const totalPastPages = Math.ceil(allPastEvents.length / eventsPerPage)

  const EventCard = ({ event, index }: { event: typeof allUpcomingEvents[0], index: number }) => (
    <Card className={`p-6 bg-white rounded-lg shadow-lg animate-fade-in hover:shadow-xl transition-shadow card-hover`} style={{animationDelay: `${index * 100}ms`}}>
      <CardHeader>
        <CardTitle className="text-xl font-bold text-[#003c71] mb-2">{event.title}</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="flex items-center text-gray-500 mb-2">
          <Calendar className="mr-2 h-4 w-4" />
          <span>{event.date}</span>
        </div>
        <div className="flex items-center text-gray-500 mb-2">
          <Clock className="mr-2 h-4 w-4" />
          <span>{event.time}</span>
        </div>
        <div className="flex items-center text-gray-500 mb-4">
          <MapPin className="mr-2 h-4 w-4" />
          <span>{event.location}</span>
        </div>
        <p className="text-gray-600 mb-4">{event.description}</p>
        <Button className="bg-[#b3a369] text-[#003c71] hover:bg-[#b3a369]/90 button-hover" asChild>
          <Link href={`/events/${event.id}`}>Info</Link>
        </Button>
      </CardContent>
    </Card>
  )

  const Pagination = ({ currentPage, totalPages, setPage, label }: { currentPage: number, totalPages: number, setPage: (page: number) => void, label: string }) => (
    <div className="flex justify-center items-center space-x-4 mt-8">
      <Button
        onClick={() => setPage(Math.max(currentPage - 1, 1))}
        disabled={currentPage === 1}
        variant="outline"
        className="text-[#003c71] button-hover"
      >
        <ChevronLeft className="mr-2 h-4 w-4" /> Previous
      </Button>
      <span className="text-[#003c71]">
        {label} {currentPage} of {totalPages}
      </span>
      <Button
        onClick={() => setPage(Math.min(currentPage + 1, totalPages))}
        disabled={currentPage === totalPages}
        variant="outline"
        className="text-[#003c71] button-hover"
      >
        Next <ChevronRight className="ml-2 h-4 w-4" />
      </Button>
    </div>
  )

  return (
    <>
      <section className="w-full py-12 md:py-24 lg:py-32 gradient-bg text-white">
        <div className="container px-4 md:px-6">
          <h1 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl animate-fade-in">
            Events
          </h1>
          <p className="mt-4 text-lg animate-slide-up">
            Stay up to date with our upcoming real estate-related events and activities
          </p>
        </div>
      </section>
      <section className="w-full py-12 md:py-24 lg:py-32">
        <div className="container px-4 md:px-6">
          <h2 className="text-2xl font-bold text-[#003c71] mb-6 animate-fade-in">Upcoming Events</h2>
          <div className="grid gap-8 mb-8">
            {currentUpcomingEvents.map((event, index) => (
              <EventCard key={event.id} event={event} index={index} />
            ))}
          </div>
          <Pagination
            currentPage={upcomingPage}
            totalPages={totalUpcomingPages}
            setPage={setUpcomingPage}
            label="Upcoming Events Page"
          />

          <h2 className="text-2xl font-bold text-[#003c71] mb-6 mt-16 animate-fade-in">Past Events</h2>
          <div className="grid gap-8 mb-8">
            {currentPastEvents.map((event, index) => (
              <EventCard key={event.id} event={event} index={index} />
            ))}
          </div>
          <Pagination
            currentPage={pastPage}
            totalPages={totalPastPages}
            setPage={setPastPage}
            label="Past Events Page"
          />
        </div>
      </section>
    </>
  )
}

